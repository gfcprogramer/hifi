<@include Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//  model.frag
//  fragment shader
//
//  Created by Andrzej Kapolka on 10/14/13.
//  Copyright 2013 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include DeferredBufferWrite.slh@>

<@include Material.slh@>

// the diffuse texture
uniform sampler2D diffuseMap;

// the interpolated normal
varying vec4 normal;

void main(void) {
    // Fetch diffuse map
    vec4 diffuse = texture2D(diffuseMap, gl_TexCoord[0].st);

    Material mat = getMaterial();

    packDeferredFragment(
        normalize(normal.xyz), 
        evalOpaqueFinalAlpha(getMaterialOpacity(mat), diffuse.a),
        getMaterialDiffuse(mat) * diffuse.rgb,
        getMaterialSpecular(mat),
        getMaterialShininess(mat));
}
